// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN
buildscript {
	repositories {

        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central' }
        // maven { url 'http://maven.aliyun.com/repository/jcenter' }
        // maven { url 'http://maven.aliyun.com/repository/google' }
        // maven { url 'http://maven.aliyun.com/repository/central' }
        // maven { url 'http://maven.aliyun.com/repository/gradle-plugin' }
		// google()
		// jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:3.2.0'
	}
}

allprojects {
   repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central' }

	//   maven { url 'http://maven.aliyun.com/repository/jcenter' }
	//   maven { url 'http://maven.aliyun.com/repository/google' }
	//   maven { url 'http://maven.aliyun.com/repository/central' }
	//   maven { url 'http://maven.aliyun.com/repository/gradle-plugin' }
    //   google()
    //   jcenter()
      flatDir {
        dirs 'libs'
      }
   }
}

apply plugin: 'com.android.application'

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
**DEPS**}

android {
	compileSdkVersion **APIVERSION**
	buildToolsVersion '**BUILDTOOLS**'

	defaultConfig {
		minSdkVersion **MINSDKVERSION**
		targetSdkVersion **TARGETSDKVERSION**
		applicationId '**APPLICATIONID**'
		ndk {
            abiFilters **ABIFILTERS**
        }
		versionCode	**VERSIONCODE**
		versionName	'**VERSIONNAME**'
	}

	lintOptions {
		abortOnError false
	}

	aaptOptions {
		noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
	}

**SIGN**
	buildTypes {
  		debug {
 			minifyEnabled **MINIFY_DEBUG**
 			useProguard **PROGUARD_DEBUG**
 			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
  			jniDebuggable true
  		}
  		release {
 			minifyEnabled **MINIFY_RELEASE**
 			useProguard **PROGUARD_RELEASE**
  			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
  			**SIGNCONFIG**
  		}
	}
**PACKAGING_OPTIONS**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}


**SOURCE_BUILD_SETUP**